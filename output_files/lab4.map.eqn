-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--periodCount[14] is periodCount[14]
--register power-up is low

periodCount[14] = DFFEAS(A1L2, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[17] is periodCount[17]
--register power-up is low

periodCount[17] = DFFEAS(A1L6, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[16] is periodCount[16]
--register power-up is low

periodCount[16] = DFFEAS(A1L10, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[15] is periodCount[15]
--register power-up is low

periodCount[15] = DFFEAS(A1L14, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[13] is periodCount[13]
--register power-up is low

periodCount[13] = DFFEAS(A1L18, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[12] is periodCount[12]
--register power-up is low

periodCount[12] = DFFEAS(A1L22, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[11] is periodCount[11]
--register power-up is low

periodCount[11] = DFFEAS(A1L26, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[6] is periodCount[6]
--register power-up is low

periodCount[6] = DFFEAS(A1L30, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[5] is periodCount[5]
--register power-up is low

periodCount[5] = DFFEAS(A1L34, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[4] is periodCount[4]
--register power-up is low

periodCount[4] = DFFEAS(A1L38, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[8] is periodCount[8]
--register power-up is low

periodCount[8] = DFFEAS(A1L42, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[10] is periodCount[10]
--register power-up is low

periodCount[10] = DFFEAS(A1L46, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[9] is periodCount[9]
--register power-up is low

periodCount[9] = DFFEAS(A1L50, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[7] is periodCount[7]
--register power-up is low

periodCount[7] = DFFEAS(A1L54, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[21] is periodCount[21]
--register power-up is low

periodCount[21] = DFFEAS(A1L58, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[24] is periodCount[24]
--register power-up is low

periodCount[24] = DFFEAS(A1L62, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[23] is periodCount[23]
--register power-up is low

periodCount[23] = DFFEAS(A1L66, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[22] is periodCount[22]
--register power-up is low

periodCount[22] = DFFEAS(A1L70, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[20] is periodCount[20]
--register power-up is low

periodCount[20] = DFFEAS(A1L74, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[19] is periodCount[19]
--register power-up is low

periodCount[19] = DFFEAS(A1L78, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[18] is periodCount[18]
--register power-up is low

periodCount[18] = DFFEAS(A1L82, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[28] is periodCount[28]
--register power-up is low

periodCount[28] = DFFEAS(A1L86, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[31] is periodCount[31]
--register power-up is low

periodCount[31] = DFFEAS(A1L90, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[30] is periodCount[30]
--register power-up is low

periodCount[30] = DFFEAS(A1L94, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[29] is periodCount[29]
--register power-up is low

periodCount[29] = DFFEAS(A1L98, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[27] is periodCount[27]
--register power-up is low

periodCount[27] = DFFEAS(A1L102, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[26] is periodCount[26]
--register power-up is low

periodCount[26] = DFFEAS(A1L106, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--periodCount[25] is periodCount[25]
--register power-up is low

periodCount[25] = DFFEAS(A1L110, CLOCK_50, reset,  ,  ,  ,  , A1L277,  );


--A1L114 is Add1~1
A1L114_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[18] ) + ( A1L131 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add1~2
A1L115_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[18] ) + ( A1L131 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L118 is Add1~5
A1L118_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[21] ) + ( A1L123 );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add1~6
A1L119_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[21] ) + ( A1L123 );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L122 is Add1~9
A1L122_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[20] ) + ( A1L127 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add1~10
A1L123_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[20] ) + ( A1L127 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L126 is Add1~13
A1L126_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[19] ) + ( A1L115 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add1~14
A1L127_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[19] ) + ( A1L115 );
A1L127 = CARRY(A1L127_adder_eqn);


--A1L130 is Add1~17
A1L130_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[17] ) + ( A1L135 );
A1L130 = SUM(A1L130_adder_eqn);

--A1L131 is Add1~18
A1L131_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[17] ) + ( A1L135 );
A1L131 = CARRY(A1L131_adder_eqn);


--A1L134 is Add1~21
A1L134_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[16] ) + ( A1L139 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add1~22
A1L135_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[16] ) + ( A1L139 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L138 is Add1~25
A1L138_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[15] ) + ( A1L163 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add1~26
A1L139_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[15] ) + ( A1L163 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L142 is Add1~29
A1L142_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[4] ) + ( A1L159 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add1~30
A1L143_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[4] ) + ( A1L159 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L146 is Add1~33
A1L146_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( current_angle[7] ) + ( A1L151 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add1~34
A1L147_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( current_angle[7] ) + ( A1L151 );
A1L147 = CARRY(A1L147_adder_eqn);


--A1L150 is Add1~37
A1L150_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[6] ) + ( A1L155 );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add1~38
A1L151_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[6] ) + ( A1L155 );
A1L151 = CARRY(A1L151_adder_eqn);


--A1L154 is Add1~41
A1L154_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[5] ) + ( A1L143 );
A1L154 = SUM(A1L154_adder_eqn);

--A1L155 is Add1~42
A1L155_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[5] ) + ( A1L143 );
A1L155 = CARRY(A1L155_adder_eqn);


--A1L158 is Add1~45
A1L158_adder_eqn = ( current_angle[3] ) + ( VCC ) + ( !VCC );
A1L158 = SUM(A1L158_adder_eqn);

--A1L159 is Add1~46
A1L159_adder_eqn = ( current_angle[3] ) + ( VCC ) + ( !VCC );
A1L159 = CARRY(A1L159_adder_eqn);


--A1L162 is Add1~49
A1L162_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[14] ) + ( A1L167 );
A1L162 = SUM(A1L162_adder_eqn);

--A1L163 is Add1~50
A1L163_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[14] ) + ( A1L167 );
A1L163 = CARRY(A1L163_adder_eqn);


--A1L166 is Add1~53
A1L166_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[13] ) + ( A1L171 );
A1L166 = SUM(A1L166_adder_eqn);

--A1L167 is Add1~54
A1L167_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[13] ) + ( A1L171 );
A1L167 = CARRY(A1L167_adder_eqn);


--A1L170 is Add1~57
A1L170_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( current_angle[12] ) + ( A1L175 );
A1L170 = SUM(A1L170_adder_eqn);

--A1L171 is Add1~58
A1L171_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( current_angle[12] ) + ( A1L175 );
A1L171 = CARRY(A1L171_adder_eqn);


--A1L174 is Add1~61
A1L174_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[11] ) + ( A1L183 );
A1L174 = SUM(A1L174_adder_eqn);

--A1L175 is Add1~62
A1L175_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[11] ) + ( A1L183 );
A1L175 = CARRY(A1L175_adder_eqn);


--A1L178 is Add1~65
A1L178_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[9] ) + ( A1L187 );
A1L178 = SUM(A1L178_adder_eqn);

--A1L179 is Add1~66
A1L179_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[9] ) + ( A1L187 );
A1L179 = CARRY(A1L179_adder_eqn);


--A1L182 is Add1~69
A1L182_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[10] ) + ( A1L179 );
A1L182 = SUM(A1L182_adder_eqn);

--A1L183 is Add1~70
A1L183_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[10] ) + ( A1L179 );
A1L183 = CARRY(A1L183_adder_eqn);


--A1L186 is Add1~73
A1L186_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[8] ) + ( A1L147 );
A1L186 = SUM(A1L186_adder_eqn);

--A1L187 is Add1~74
A1L187_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[8] ) + ( A1L147 );
A1L187 = CARRY(A1L187_adder_eqn);


--A1L190 is Add1~77
A1L190_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[25] ) + ( A1L207 );
A1L190 = SUM(A1L190_adder_eqn);

--A1L191 is Add1~78
A1L191_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[25] ) + ( A1L207 );
A1L191 = CARRY(A1L191_adder_eqn);


--A1L194 is Add1~81
A1L194_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[28] ) + ( A1L199 );
A1L194 = SUM(A1L194_adder_eqn);

--A1L195 is Add1~82
A1L195_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[28] ) + ( A1L199 );
A1L195 = CARRY(A1L195_adder_eqn);


--A1L198 is Add1~85
A1L198_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[27] ) + ( A1L203 );
A1L198 = SUM(A1L198_adder_eqn);

--A1L199 is Add1~86
A1L199_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[27] ) + ( A1L203 );
A1L199 = CARRY(A1L199_adder_eqn);


--A1L202 is Add1~89
A1L202_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[26] ) + ( A1L191 );
A1L202 = SUM(A1L202_adder_eqn);

--A1L203 is Add1~90
A1L203_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[26] ) + ( A1L191 );
A1L203 = CARRY(A1L203_adder_eqn);


--A1L206 is Add1~93
A1L206_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[24] ) + ( A1L211 );
A1L206 = SUM(A1L206_adder_eqn);

--A1L207 is Add1~94
A1L207_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[24] ) + ( A1L211 );
A1L207 = CARRY(A1L207_adder_eqn);


--A1L210 is Add1~97
A1L210_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[23] ) + ( A1L215 );
A1L210 = SUM(A1L210_adder_eqn);

--A1L211 is Add1~98
A1L211_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[23] ) + ( A1L215 );
A1L211 = CARRY(A1L211_adder_eqn);


--A1L214 is Add1~101
A1L214_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[22] ) + ( A1L119 );
A1L214 = SUM(A1L214_adder_eqn);

--A1L215 is Add1~102
A1L215_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[22] ) + ( A1L119 );
A1L215 = CARRY(A1L215_adder_eqn);


--A1L218 is Add1~105
A1L218_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[31] ) + ( A1L223 );
A1L218 = SUM(A1L218_adder_eqn);


--A1L222 is Add1~109
A1L222_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[30] ) + ( A1L227 );
A1L222 = SUM(A1L222_adder_eqn);

--A1L223 is Add1~110
A1L223_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[30] ) + ( A1L227 );
A1L223 = CARRY(A1L223_adder_eqn);


--A1L226 is Add1~113
A1L226_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[29] ) + ( A1L195 );
A1L226 = SUM(A1L226_adder_eqn);

--A1L227 is Add1~114
A1L227_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[29] ) + ( A1L195 );
A1L227 = CARRY(A1L227_adder_eqn);


--A1L2 is Add0~1
A1L2_adder_eqn = ( periodCount[14] ) + ( GND ) + ( A1L19 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2
A1L3_adder_eqn = ( periodCount[14] ) + ( GND ) + ( A1L19 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( periodCount[17] ) + ( GND ) + ( A1L11 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6
A1L7_adder_eqn = ( periodCount[17] ) + ( GND ) + ( A1L11 );
A1L7 = CARRY(A1L7_adder_eqn);


--A1L10 is Add0~9
A1L10_adder_eqn = ( periodCount[16] ) + ( GND ) + ( A1L15 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( periodCount[16] ) + ( GND ) + ( A1L15 );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13
A1L14_adder_eqn = ( periodCount[15] ) + ( GND ) + ( A1L3 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( periodCount[15] ) + ( GND ) + ( A1L3 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17
A1L18_adder_eqn = ( periodCount[13] ) + ( VCC ) + ( A1L23 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( periodCount[13] ) + ( VCC ) + ( A1L23 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21
A1L22_adder_eqn = ( periodCount[12] ) + ( GND ) + ( A1L27 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( periodCount[12] ) + ( GND ) + ( A1L27 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25
A1L26_adder_eqn = ( periodCount[11] ) + ( GND ) + ( A1L47 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( periodCount[11] ) + ( GND ) + ( A1L47 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29
A1L30_adder_eqn = ( periodCount[6] ) + ( GND ) + ( A1L35 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( periodCount[6] ) + ( GND ) + ( A1L35 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33
A1L34_adder_eqn = ( periodCount[5] ) + ( GND ) + ( A1L39 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( periodCount[5] ) + ( GND ) + ( A1L39 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37
A1L38_adder_eqn = ( periodCount[4] ) + ( VCC ) + ( !VCC );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( periodCount[4] ) + ( VCC ) + ( !VCC );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add0~41
A1L42_adder_eqn = ( periodCount[8] ) + ( VCC ) + ( A1L55 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42
A1L43_adder_eqn = ( periodCount[8] ) + ( VCC ) + ( A1L55 );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add0~45
A1L46_adder_eqn = ( periodCount[10] ) + ( VCC ) + ( A1L51 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46
A1L47_adder_eqn = ( periodCount[10] ) + ( VCC ) + ( A1L51 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add0~49
A1L50_adder_eqn = ( periodCount[9] ) + ( VCC ) + ( A1L43 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50
A1L51_adder_eqn = ( periodCount[9] ) + ( VCC ) + ( A1L43 );
A1L51 = CARRY(A1L51_adder_eqn);


--A1L54 is Add0~53
A1L54_adder_eqn = ( periodCount[7] ) + ( GND ) + ( A1L31 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54
A1L55_adder_eqn = ( periodCount[7] ) + ( GND ) + ( A1L31 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add0~57
A1L58_adder_eqn = ( periodCount[21] ) + ( GND ) + ( A1L75 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58
A1L59_adder_eqn = ( periodCount[21] ) + ( GND ) + ( A1L75 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add0~61
A1L62_adder_eqn = ( periodCount[24] ) + ( GND ) + ( A1L67 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62
A1L63_adder_eqn = ( periodCount[24] ) + ( GND ) + ( A1L67 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add0~65
A1L66_adder_eqn = ( periodCount[23] ) + ( GND ) + ( A1L71 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66
A1L67_adder_eqn = ( periodCount[23] ) + ( GND ) + ( A1L71 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add0~69
A1L70_adder_eqn = ( periodCount[22] ) + ( GND ) + ( A1L59 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70
A1L71_adder_eqn = ( periodCount[22] ) + ( GND ) + ( A1L59 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add0~73
A1L74_adder_eqn = ( periodCount[20] ) + ( GND ) + ( A1L79 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74
A1L75_adder_eqn = ( periodCount[20] ) + ( GND ) + ( A1L79 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add0~77
A1L78_adder_eqn = ( periodCount[19] ) + ( GND ) + ( A1L83 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78
A1L79_adder_eqn = ( periodCount[19] ) + ( GND ) + ( A1L83 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L82 is Add0~81
A1L82_adder_eqn = ( periodCount[18] ) + ( GND ) + ( A1L7 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82
A1L83_adder_eqn = ( periodCount[18] ) + ( GND ) + ( A1L7 );
A1L83 = CARRY(A1L83_adder_eqn);


--A1L86 is Add0~85
A1L86_adder_eqn = ( periodCount[28] ) + ( GND ) + ( A1L103 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86
A1L87_adder_eqn = ( periodCount[28] ) + ( GND ) + ( A1L103 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add0~89
A1L90_adder_eqn = ( periodCount[31] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);


--A1L94 is Add0~93
A1L94_adder_eqn = ( periodCount[30] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add0~94
A1L95_adder_eqn = ( periodCount[30] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L98 is Add0~97
A1L98_adder_eqn = ( periodCount[29] ) + ( GND ) + ( A1L87 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add0~98
A1L99_adder_eqn = ( periodCount[29] ) + ( GND ) + ( A1L87 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L102 is Add0~101
A1L102_adder_eqn = ( periodCount[27] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add0~102
A1L103_adder_eqn = ( periodCount[27] ) + ( GND ) + ( A1L107 );
A1L103 = CARRY(A1L103_adder_eqn);


--A1L106 is Add0~105
A1L106_adder_eqn = ( periodCount[26] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add0~106
A1L107_adder_eqn = ( periodCount[26] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L110 is Add0~109
A1L110_adder_eqn = ( periodCount[25] ) + ( GND ) + ( A1L63 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add0~110
A1L111_adder_eqn = ( periodCount[25] ) + ( GND ) + ( A1L63 );
A1L111 = CARRY(A1L111_adder_eqn);


--irq is irq
irq = OUTPUT(A1L280Q);


--out_wave_export is out_wave_export
out_wave_export = OUTPUT(A1L463Q);


--A1L280Q is irq~reg0
--register power-up is low

A1L280Q = DFFEAS(A1L279, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--A1L463Q is out_wave_export~reg0
--register power-up is low

A1L463Q = DFFEAS(A1L313, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--write_enable is write_enable
write_enable = INPUT();


--current_state.INT_RIGHT is current_state.INT_RIGHT
--register power-up is low

current_state.INT_RIGHT = DFFEAS(A1L496, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_state.SWEEP_RIGHT is current_state.SWEEP_RIGHT
--register power-up is low

current_state.SWEEP_RIGHT = DFFEAS(A1L494, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_angle[18] is current_angle[18]
--register power-up is low

current_angle[18] = DFFEAS(A1L114, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[18] is max_angle[18]
--register power-up is low

max_angle[18] = DFFEAS(write_data[18], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[21] is current_angle[21]
--register power-up is low

current_angle[21] = DFFEAS(A1L118, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[21] is max_angle[21]
--register power-up is low

max_angle[21] = DFFEAS(write_data[21], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[20] is current_angle[20]
--register power-up is low

current_angle[20] = DFFEAS(A1L122, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[20] is max_angle[20]
--register power-up is low

max_angle[20] = DFFEAS(write_data[20], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[19] is current_angle[19]
--register power-up is low

current_angle[19] = DFFEAS(A1L126, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[19] is max_angle[19]
--register power-up is low

max_angle[19] = DFFEAS(write_data[19], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L314 is LessThan1~0
A1L314 = ( current_angle[19] & ( max_angle[19] & ( (!current_angle[21] & (!max_angle[21] & (!current_angle[20] $ (max_angle[20])))) # (current_angle[21] & (max_angle[21] & (!current_angle[20] $ (max_angle[20])))) ) ) ) # ( !current_angle[19] & ( !max_angle[19] & ( (!current_angle[21] & (!max_angle[21] & (!current_angle[20] $ (max_angle[20])))) # (current_angle[21] & (max_angle[21] & (!current_angle[20] $ (max_angle[20])))) ) ) );


--current_angle[17] is current_angle[17]
--register power-up is low

current_angle[17] = DFFEAS(A1L130, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[17] is max_angle[17]
--register power-up is low

max_angle[17] = DFFEAS(write_data[17], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[16] is current_angle[16]
--register power-up is low

current_angle[16] = DFFEAS(A1L134, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[16] is max_angle[16]
--register power-up is low

max_angle[16] = DFFEAS(A1L408, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L315 is LessThan1~1
A1L315 = !current_angle[16] $ (!max_angle[16]);


--A1L316 is LessThan1~2
A1L316 = ( max_angle[17] & ( A1L315 & ( (A1L314 & (current_angle[17] & (!current_angle[18] $ (max_angle[18])))) ) ) ) # ( !max_angle[17] & ( A1L315 & ( (A1L314 & (!current_angle[17] & (!current_angle[18] $ (max_angle[18])))) ) ) );


--current_angle[15] is current_angle[15]
--register power-up is low

current_angle[15] = DFFEAS(A1L251, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[15] is max_angle[15]
--register power-up is low

max_angle[15] = DFFEAS(A1L406, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L317 is LessThan1~3
A1L317 = !current_angle[15] $ (!max_angle[15]);


--current_angle[4] is current_angle[4]
--register power-up is low

current_angle[4] = DFFEAS(A1L235, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[4] is max_angle[4]
--register power-up is low

max_angle[4] = DFFEAS(write_data[4], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[7] is current_angle[7]
--register power-up is low

current_angle[7] = DFFEAS(A1L146, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[7] is max_angle[7]
--register power-up is low

max_angle[7] = DFFEAS(A1L395, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[6] is current_angle[6]
--register power-up is low

current_angle[6] = DFFEAS(A1L238, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[6] is max_angle[6]
--register power-up is low

max_angle[6] = DFFEAS(write_data[6], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[5] is current_angle[5]
--register power-up is low

current_angle[5] = DFFEAS(A1L154, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[5] is max_angle[5]
--register power-up is low

max_angle[5] = DFFEAS(A1L392, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L318 is LessThan1~4
A1L318 = ( !current_angle[5] & ( max_angle[5] & ( (!current_angle[7] & (max_angle[7] & (!current_angle[6] $ (!max_angle[6])))) # (current_angle[7] & (!max_angle[7] & (!current_angle[6] $ (!max_angle[6])))) ) ) ) # ( current_angle[5] & ( !max_angle[5] & ( (!current_angle[7] & (max_angle[7] & (!current_angle[6] $ (!max_angle[6])))) # (current_angle[7] & (!max_angle[7] & (!current_angle[6] $ (!max_angle[6])))) ) ) );


--max_angle[3] is max_angle[3]
--register power-up is low

max_angle[3] = DFFEAS(write_data[3], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[3] is current_angle[3]
--register power-up is low

current_angle[3] = DFFEAS(A1L158, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[2] is max_angle[2]
--register power-up is low

max_angle[2] = DFFEAS(write_data[2], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--max_angle[1] is max_angle[1]
--register power-up is low

max_angle[1] = DFFEAS(write_data[1], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--max_angle[0] is max_angle[0]
--register power-up is low

max_angle[0] = DFFEAS(write_data[0], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L319 is LessThan1~5
A1L319 = ( max_angle[0] & ( (!max_angle[3] & current_angle[3]) ) ) # ( !max_angle[0] & ( (!max_angle[3] & (((!max_angle[2] & !max_angle[1])) # (current_angle[3]))) # (max_angle[3] & (current_angle[3] & (!max_angle[2] & !max_angle[1]))) ) );


--A1L320 is LessThan1~6
A1L320 = ( current_angle[5] & ( max_angle[5] & ( (!current_angle[7] & ((!max_angle[7]) # ((current_angle[6] & max_angle[6])))) # (current_angle[7] & (!max_angle[7] & (current_angle[6] & max_angle[6]))) ) ) ) # ( !current_angle[5] & ( max_angle[5] & ( (!current_angle[7] & ((!max_angle[7]) # ((current_angle[6] & max_angle[6])))) # (current_angle[7] & (!max_angle[7] & (current_angle[6] & max_angle[6]))) ) ) ) # ( current_angle[5] & ( !max_angle[5] & ( (!current_angle[7] & ((!max_angle[7]) # ((current_angle[6] & max_angle[6])))) # (current_angle[7] & (!max_angle[7] & (current_angle[6] & max_angle[6]))) ) ) ) # ( !current_angle[5] & ( !max_angle[5] & ( (!current_angle[7] & ((!max_angle[7]) # ((max_angle[6]) # (current_angle[6])))) # (current_angle[7] & (!max_angle[7] & ((max_angle[6]) # (current_angle[6])))) ) ) );


--A1L321 is LessThan1~7
A1L321 = ( !A1L320 & ( (!A1L318) # ((!current_angle[4] & ((!max_angle[4]) # (A1L319))) # (current_angle[4] & (!max_angle[4] & A1L319))) ) );


--current_angle[14] is current_angle[14]
--register power-up is low

current_angle[14] = DFFEAS(A1L249, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[14] is max_angle[14]
--register power-up is low

max_angle[14] = DFFEAS(write_data[14], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[13] is current_angle[13]
--register power-up is low

current_angle[13] = DFFEAS(A1L166, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[13] is max_angle[13]
--register power-up is low

max_angle[13] = DFFEAS(write_data[13], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[12] is current_angle[12]
--register power-up is low

current_angle[12] = DFFEAS(A1L170, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[12] is max_angle[12]
--register power-up is low

max_angle[12] = DFFEAS(write_data[12], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L322 is LessThan1~8
A1L322 = ( current_angle[12] & ( max_angle[12] & ( (!current_angle[14] & (max_angle[14] & (!current_angle[13] $ (max_angle[13])))) # (current_angle[14] & (!max_angle[14] & (!current_angle[13] $ (max_angle[13])))) ) ) ) # ( !current_angle[12] & ( !max_angle[12] & ( (!current_angle[14] & (max_angle[14] & (!current_angle[13] $ (max_angle[13])))) # (current_angle[14] & (!max_angle[14] & (!current_angle[13] $ (max_angle[13])))) ) ) );


--current_angle[11] is current_angle[11]
--register power-up is low

current_angle[11] = DFFEAS(A1L174, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[11] is max_angle[11]
--register power-up is low

max_angle[11] = DFFEAS(write_data[11], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[9] is current_angle[9]
--register power-up is low

current_angle[9] = DFFEAS(A1L243, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[9] is max_angle[9]
--register power-up is low

max_angle[9] = DFFEAS(A1L398, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[10] is current_angle[10]
--register power-up is low

current_angle[10] = DFFEAS(A1L182, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[10] is max_angle[10]
--register power-up is low

max_angle[10] = DFFEAS(A1L400, CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[8] is current_angle[8]
--register power-up is low

current_angle[8] = DFFEAS(A1L241, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[8] is max_angle[8]
--register power-up is low

max_angle[8] = DFFEAS(write_data[8], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L323 is LessThan1~9
A1L323 = ( A1L341 & ( A1L342 & ( (!current_angle[9] & (!max_angle[9] & (!current_angle[14] $ (!max_angle[14])))) # (current_angle[9] & (max_angle[9] & (!current_angle[14] $ (!max_angle[14])))) ) ) );


--A1L324 is LessThan1~10
A1L324 = ( current_angle[12] & ( max_angle[12] & ( (!current_angle[14] & (max_angle[14] & (!current_angle[13] & max_angle[13]))) # (current_angle[14] & (((!current_angle[13] & max_angle[13])) # (max_angle[14]))) ) ) ) # ( !current_angle[12] & ( max_angle[12] & ( (!current_angle[14] & (max_angle[14] & ((!current_angle[13]) # (max_angle[13])))) # (current_angle[14] & (((!current_angle[13]) # (max_angle[13])) # (max_angle[14]))) ) ) ) # ( current_angle[12] & ( !max_angle[12] & ( (!current_angle[14] & (max_angle[14] & (!current_angle[13] & max_angle[13]))) # (current_angle[14] & (((!current_angle[13] & max_angle[13])) # (max_angle[14]))) ) ) ) # ( !current_angle[12] & ( !max_angle[12] & ( (!current_angle[14] & (max_angle[14] & (!current_angle[13] & max_angle[13]))) # (current_angle[14] & (((!current_angle[13] & max_angle[13])) # (max_angle[14]))) ) ) );


--A1L325 is LessThan1~11
A1L325 = ( max_angle[10] & ( !A1L324 & ( ((!max_angle[11]) # (!A1L322)) # (current_angle[11]) ) ) ) # ( !max_angle[10] & ( !A1L324 & ( (!A1L322) # ((!current_angle[11] & (!max_angle[11] & current_angle[10])) # (current_angle[11] & ((!max_angle[11]) # (current_angle[10])))) ) ) );


--A1L326 is LessThan1~12
A1L326 = ( A1L343 & ( A1L344 & ( (!current_angle[9] & (!max_angle[9] & (current_angle[8] & max_angle[8]))) # (current_angle[9] & ((!max_angle[9]) # ((current_angle[8] & max_angle[8])))) ) ) );


--A1L327 is LessThan1~13
A1L327 = ( A1L325 & ( A1L326 & ( (A1L316 & !A1L317) ) ) ) # ( !A1L325 & ( A1L326 & ( (A1L316 & !A1L317) ) ) ) # ( A1L325 & ( !A1L326 & ( (A1L316 & (!A1L317 & (!A1L321 & A1L323))) ) ) ) # ( !A1L325 & ( !A1L326 & ( (A1L316 & !A1L317) ) ) );


--A1L328 is LessThan1~14
A1L328 = ( A1L347 & ( A1L348 & ( (!A1L346 & ((!A1L314) # ((current_angle[16] & !A1L345)))) ) ) ) # ( !A1L347 & ( A1L348 & ( (!A1L346 & (((!A1L314) # (!A1L345)) # (current_angle[16]))) ) ) ) # ( A1L347 & ( !A1L348 & ( (!A1L346 & ((!A1L314) # ((current_angle[16] & !A1L345)))) ) ) ) # ( !A1L347 & ( !A1L348 & ( (!A1L346 & ((!A1L314) # (!A1L345))) ) ) );


--current_angle[25] is current_angle[25]
--register power-up is low

current_angle[25] = DFFEAS(A1L190, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[25] is max_angle[25]
--register power-up is low

max_angle[25] = DFFEAS(write_data[25], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[28] is current_angle[28]
--register power-up is low

current_angle[28] = DFFEAS(A1L194, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[28] is max_angle[28]
--register power-up is low

max_angle[28] = DFFEAS(write_data[28], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[27] is current_angle[27]
--register power-up is low

current_angle[27] = DFFEAS(A1L198, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[27] is max_angle[27]
--register power-up is low

max_angle[27] = DFFEAS(write_data[27], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[26] is current_angle[26]
--register power-up is low

current_angle[26] = DFFEAS(A1L202, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[26] is max_angle[26]
--register power-up is low

max_angle[26] = DFFEAS(write_data[26], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L329 is LessThan1~15
A1L329 = ( current_angle[26] & ( max_angle[26] & ( (!current_angle[28] & (!max_angle[28] & (!current_angle[27] $ (max_angle[27])))) # (current_angle[28] & (max_angle[28] & (!current_angle[27] $ (max_angle[27])))) ) ) ) # ( !current_angle[26] & ( !max_angle[26] & ( (!current_angle[28] & (!max_angle[28] & (!current_angle[27] $ (max_angle[27])))) # (current_angle[28] & (max_angle[28] & (!current_angle[27] $ (max_angle[27])))) ) ) );


--current_angle[24] is current_angle[24]
--register power-up is low

current_angle[24] = DFFEAS(A1L206, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[24] is max_angle[24]
--register power-up is low

max_angle[24] = DFFEAS(write_data[24], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L330 is LessThan1~16
A1L330 = !current_angle[24] $ (!max_angle[24]);


--current_angle[23] is current_angle[23]
--register power-up is low

current_angle[23] = DFFEAS(A1L210, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[23] is max_angle[23]
--register power-up is low

max_angle[23] = DFFEAS(write_data[23], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L331 is LessThan1~17
A1L331 = !current_angle[23] $ (!max_angle[23]);


--current_angle[22] is current_angle[22]
--register power-up is low

current_angle[22] = DFFEAS(A1L214, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[22] is max_angle[22]
--register power-up is low

max_angle[22] = DFFEAS(write_data[22], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L332 is LessThan1~18
A1L332 = !current_angle[22] $ (!max_angle[22]);


--A1L333 is LessThan1~19
A1L333 = ( !A1L331 & ( !A1L332 & ( (A1L329 & (!A1L330 & (!current_angle[25] $ (max_angle[25])))) ) ) );


--A1L334 is LessThan1~20
A1L334 = ( current_angle[26] & ( max_angle[26] & ( (!current_angle[28] & (((!current_angle[27] & max_angle[27])) # (max_angle[28]))) # (current_angle[28] & (max_angle[28] & (!current_angle[27] & max_angle[27]))) ) ) ) # ( !current_angle[26] & ( max_angle[26] & ( (!current_angle[28] & (((!current_angle[27]) # (max_angle[27])) # (max_angle[28]))) # (current_angle[28] & (max_angle[28] & ((!current_angle[27]) # (max_angle[27])))) ) ) ) # ( current_angle[26] & ( !max_angle[26] & ( (!current_angle[28] & (((!current_angle[27] & max_angle[27])) # (max_angle[28]))) # (current_angle[28] & (max_angle[28] & (!current_angle[27] & max_angle[27]))) ) ) ) # ( !current_angle[26] & ( !max_angle[26] & ( (!current_angle[28] & (((!current_angle[27] & max_angle[27])) # (max_angle[28]))) # (current_angle[28] & (max_angle[28] & (!current_angle[27] & max_angle[27]))) ) ) );


--A1L335 is LessThan1~21
A1L335 = ( A1L340 & ( (!A1L329 & !A1L334) ) ) # ( !A1L340 & ( (!A1L334 & ((!A1L329) # ((!A1L339) # (A1L330)))) ) );


--current_angle[31] is current_angle[31]
--register power-up is low

current_angle[31] = DFFEAS(A1L218, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[31] is max_angle[31]
--register power-up is low

max_angle[31] = DFFEAS(write_data[31], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[30] is current_angle[30]
--register power-up is low

current_angle[30] = DFFEAS(A1L222, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[30] is max_angle[30]
--register power-up is low

max_angle[30] = DFFEAS(write_data[30], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--current_angle[29] is current_angle[29]
--register power-up is low

current_angle[29] = DFFEAS(A1L226, CLOCK_50, reset,  , A1L233,  ,  ,  ,  );


--max_angle[29] is max_angle[29]
--register power-up is low

max_angle[29] = DFFEAS(write_data[29], CLOCK_50, reset,  , A1L424,  ,  ,  ,  );


--A1L336 is LessThan1~22
A1L336 = ( current_angle[29] & ( max_angle[29] & ( (!current_angle[31] & (!max_angle[31] & (!current_angle[30] $ (max_angle[30])))) # (current_angle[31] & (max_angle[31] & (!current_angle[30] $ (max_angle[30])))) ) ) ) # ( !current_angle[29] & ( !max_angle[29] & ( (!current_angle[31] & (!max_angle[31] & (!current_angle[30] $ (max_angle[30])))) # (current_angle[31] & (max_angle[31] & (!current_angle[30] $ (max_angle[30])))) ) ) );


--A1L337 is LessThan1~23
A1L337 = ( current_angle[29] & ( max_angle[29] & ( (!current_angle[31] & (((!current_angle[30] & max_angle[30])) # (max_angle[31]))) # (current_angle[31] & (max_angle[31] & (!current_angle[30] & max_angle[30]))) ) ) ) # ( !current_angle[29] & ( max_angle[29] & ( (!current_angle[31] & (((!current_angle[30]) # (max_angle[30])) # (max_angle[31]))) # (current_angle[31] & (max_angle[31] & ((!current_angle[30]) # (max_angle[30])))) ) ) ) # ( current_angle[29] & ( !max_angle[29] & ( (!current_angle[31] & (((!current_angle[30] & max_angle[30])) # (max_angle[31]))) # (current_angle[31] & (max_angle[31] & (!current_angle[30] & max_angle[30]))) ) ) ) # ( !current_angle[29] & ( !max_angle[29] & ( (!current_angle[31] & (((!current_angle[30] & max_angle[30])) # (max_angle[31]))) # (current_angle[31] & (max_angle[31] & (!current_angle[30] & max_angle[30]))) ) ) );


--A1L338 is LessThan1~24
A1L338 = ( A1L336 & ( !A1L337 & ( (A1L335 & ((!A1L333) # ((!A1L327 & A1L328)))) ) ) ) # ( !A1L336 & ( !A1L337 ) );


--current_state.INT_LEFT is current_state.INT_LEFT
--register power-up is low

current_state.INT_LEFT = DFFEAS(A1L498, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_state.SWEEP_LEFT is current_state.SWEEP_LEFT
--register power-up is low

current_state.SWEEP_LEFT = DFFEAS(A1L495, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--min_angle[6] is min_angle[6]
--register power-up is low

min_angle[6] = DFFEAS(A1L431, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[5] is min_angle[5]
--register power-up is low

min_angle[5] = DFFEAS(write_data[5], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[4] is min_angle[4]
--register power-up is low

min_angle[4] = DFFEAS(A1L428, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[3] is min_angle[3]
--register power-up is low

min_angle[3] = DFFEAS(write_data[3], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L349 is LessThan2~0
A1L349 = (!current_angle[4] & (((current_angle[3] & !min_angle[3])) # (min_angle[4]))) # (current_angle[4] & (current_angle[3] & (min_angle[4] & !min_angle[3])));


--A1L350 is LessThan2~1
A1L350 = ( A1L349 & ( (!current_angle[6] & (((!min_angle[5]) # (min_angle[6])) # (current_angle[5]))) # (current_angle[6] & (min_angle[6] & ((!min_angle[5]) # (current_angle[5])))) ) ) # ( !A1L349 & ( (!current_angle[6] & (((current_angle[5] & !min_angle[5])) # (min_angle[6]))) # (current_angle[6] & (current_angle[5] & (min_angle[6] & !min_angle[5]))) ) );


--min_angle[8] is min_angle[8]
--register power-up is low

min_angle[8] = DFFEAS(A1L434, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[10] is min_angle[10]
--register power-up is low

min_angle[10] = DFFEAS(write_data[10], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[9] is min_angle[9]
--register power-up is low

min_angle[9] = DFFEAS(A1L436, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L351 is LessThan2~2
A1L351 = (!current_angle[10] & (!min_angle[10] & (!current_angle[9] $ (min_angle[9])))) # (current_angle[10] & (min_angle[10] & (!current_angle[9] $ (min_angle[9]))));


--min_angle[7] is min_angle[7]
--register power-up is low

min_angle[7] = DFFEAS(write_data[7], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L352 is LessThan2~3
A1L352 = ( min_angle[7] & ( (current_angle[7] & (A1L351 & (!current_angle[8] $ (min_angle[8])))) ) ) # ( !min_angle[7] & ( (!current_angle[7] & (A1L351 & (!current_angle[8] $ (min_angle[8])))) ) );


--A1L353 is LessThan2~4
A1L353 = (!current_angle[10] & (!current_angle[9] & (!min_angle[10] & min_angle[9]))) # (current_angle[10] & ((!min_angle[10]) # ((!current_angle[9] & min_angle[9]))));


--A1L354 is LessThan2~5
A1L354 = ( min_angle[7] & ( !A1L353 & ( ((!min_angle[8]) # (!A1L351)) # (current_angle[8]) ) ) ) # ( !min_angle[7] & ( !A1L353 & ( (!A1L351) # ((!current_angle[8] & (!current_angle[7] & !min_angle[8])) # (current_angle[8] & ((!current_angle[7]) # (!min_angle[8])))) ) ) );


--min_angle[17] is min_angle[17]
--register power-up is low

min_angle[17] = DFFEAS(write_data[17], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[16] is min_angle[16]
--register power-up is low

min_angle[16] = DFFEAS(write_data[16], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[15] is min_angle[15]
--register power-up is low

min_angle[15] = DFFEAS(A1L444, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L355 is LessThan2~6
A1L355 = ( min_angle[16] & ( min_angle[15] & ( (current_angle[16] & (current_angle[15] & (!current_angle[17] $ (min_angle[17])))) ) ) ) # ( !min_angle[16] & ( min_angle[15] & ( (!current_angle[16] & (current_angle[15] & (!current_angle[17] $ (min_angle[17])))) ) ) ) # ( min_angle[16] & ( !min_angle[15] & ( (current_angle[16] & (!current_angle[15] & (!current_angle[17] $ (min_angle[17])))) ) ) ) # ( !min_angle[16] & ( !min_angle[15] & ( (!current_angle[16] & (!current_angle[15] & (!current_angle[17] $ (min_angle[17])))) ) ) );


--min_angle[14] is min_angle[14]
--register power-up is low

min_angle[14] = DFFEAS(A1L442, CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L356 is LessThan2~7
A1L356 = !current_angle[14] $ (!min_angle[14]);


--min_angle[12] is min_angle[12]
--register power-up is low

min_angle[12] = DFFEAS(write_data[12], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[13] is min_angle[13]
--register power-up is low

min_angle[13] = DFFEAS(write_data[13], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L357 is LessThan2~8
A1L357 = !current_angle[13] $ (!min_angle[13]);


--min_angle[11] is min_angle[11]
--register power-up is low

min_angle[11] = DFFEAS(write_data[11], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L358 is LessThan2~9
A1L358 = ( A1L383 & ( A1L384 & ( (!current_angle[12] & (!min_angle[12] & (!current_angle[17] $ (min_angle[17])))) # (current_angle[12] & (min_angle[12] & (!current_angle[17] $ (min_angle[17])))) ) ) );


--A1L359 is LessThan2~10
A1L359 = ( min_angle[16] & ( min_angle[15] & ( (!current_angle[17] & (current_angle[16] & (!current_angle[15] & !min_angle[17]))) # (current_angle[17] & ((!min_angle[17]) # ((current_angle[16] & !current_angle[15])))) ) ) ) # ( !min_angle[16] & ( min_angle[15] & ( (!current_angle[17] & (!min_angle[17] & ((!current_angle[15]) # (current_angle[16])))) # (current_angle[17] & (((!current_angle[15]) # (!min_angle[17])) # (current_angle[16]))) ) ) ) # ( min_angle[16] & ( !min_angle[15] & ( (current_angle[17] & !min_angle[17]) ) ) ) # ( !min_angle[16] & ( !min_angle[15] & ( (!current_angle[17] & (current_angle[16] & !min_angle[17])) # (current_angle[17] & ((!min_angle[17]) # (current_angle[16]))) ) ) );


--A1L360 is LessThan2~11
A1L360 = ( min_angle[13] & ( !A1L359 & ( ((!min_angle[14]) # (!A1L355)) # (current_angle[14]) ) ) ) # ( !min_angle[13] & ( !A1L359 & ( (!A1L355) # ((!current_angle[14] & (!current_angle[13] & !min_angle[14])) # (current_angle[14] & ((!current_angle[13]) # (!min_angle[14])))) ) ) );


--A1L361 is LessThan2~12
A1L361 = (current_angle[11] & !min_angle[11]);


--A1L362 is LessThan2~13
A1L362 = ( !A1L357 & ( A1L361 & ( (A1L355 & (!A1L356 & ((!min_angle[12]) # (current_angle[12])))) ) ) ) # ( !A1L357 & ( !A1L361 & ( (current_angle[12] & (A1L355 & (!A1L356 & !min_angle[12]))) ) ) );


--A1L363 is LessThan2~14
A1L363 = ( A1L360 & ( !A1L362 & ( (!A1L358) # ((A1L354 & ((!A1L350) # (!A1L352)))) ) ) );


--min_angle[21] is min_angle[21]
--register power-up is low

min_angle[21] = DFFEAS(write_data[21], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[24] is min_angle[24]
--register power-up is low

min_angle[24] = DFFEAS(write_data[24], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[23] is min_angle[23]
--register power-up is low

min_angle[23] = DFFEAS(write_data[23], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[22] is min_angle[22]
--register power-up is low

min_angle[22] = DFFEAS(write_data[22], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L364 is LessThan2~15
A1L364 = ( min_angle[23] & ( min_angle[22] & ( (current_angle[23] & (current_angle[22] & (!current_angle[24] $ (min_angle[24])))) ) ) ) # ( !min_angle[23] & ( min_angle[22] & ( (!current_angle[23] & (current_angle[22] & (!current_angle[24] $ (min_angle[24])))) ) ) ) # ( min_angle[23] & ( !min_angle[22] & ( (current_angle[23] & (!current_angle[22] & (!current_angle[24] $ (min_angle[24])))) ) ) ) # ( !min_angle[23] & ( !min_angle[22] & ( (!current_angle[23] & (!current_angle[22] & (!current_angle[24] $ (min_angle[24])))) ) ) );


--min_angle[20] is min_angle[20]
--register power-up is low

min_angle[20] = DFFEAS(write_data[20], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L365 is LessThan2~16
A1L365 = !current_angle[20] $ (!min_angle[20]);


--min_angle[19] is min_angle[19]
--register power-up is low

min_angle[19] = DFFEAS(write_data[19], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L366 is LessThan2~17
A1L366 = !current_angle[19] $ (!min_angle[19]);


--min_angle[18] is min_angle[18]
--register power-up is low

min_angle[18] = DFFEAS(write_data[18], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L367 is LessThan2~18
A1L367 = !current_angle[18] $ (!min_angle[18]);


--A1L368 is LessThan2~19
A1L368 = ( !A1L366 & ( !A1L367 & ( (A1L364 & (!A1L365 & (!current_angle[21] $ (min_angle[21])))) ) ) );


--A1L369 is LessThan2~20
A1L369 = (A1L364 & (!A1L365 & (!current_angle[21] $ (min_angle[21]))));


--A1L370 is LessThan2~21
A1L370 = ( min_angle[23] & ( min_angle[22] & ( (current_angle[24] & !min_angle[24]) ) ) ) # ( !min_angle[23] & ( min_angle[22] & ( (!current_angle[24] & (current_angle[23] & !min_angle[24])) # (current_angle[24] & ((!min_angle[24]) # (current_angle[23]))) ) ) ) # ( min_angle[23] & ( !min_angle[22] & ( (!current_angle[24] & (current_angle[23] & (current_angle[22] & !min_angle[24]))) # (current_angle[24] & ((!min_angle[24]) # ((current_angle[23] & current_angle[22])))) ) ) ) # ( !min_angle[23] & ( !min_angle[22] & ( (!current_angle[24] & (!min_angle[24] & ((current_angle[22]) # (current_angle[23])))) # (current_angle[24] & (((!min_angle[24]) # (current_angle[22])) # (current_angle[23]))) ) ) );


--A1L371 is LessThan2~22
A1L371 = ( min_angle[20] & ( !A1L370 & ( (!current_angle[21]) # ((!A1L364) # (min_angle[21])) ) ) ) # ( !min_angle[20] & ( !A1L370 & ( (!A1L364) # ((!current_angle[21] & ((!current_angle[20]) # (min_angle[21]))) # (current_angle[21] & (!current_angle[20] & min_angle[21]))) ) ) );


--A1L372 is LessThan2~23
A1L372 = ( min_angle[18] & ( A1L371 & ( (!current_angle[19]) # ((!A1L369) # (min_angle[19])) ) ) ) # ( !min_angle[18] & ( A1L371 & ( (!A1L369) # ((!current_angle[19] & ((!current_angle[18]) # (min_angle[19]))) # (current_angle[19] & (!current_angle[18] & min_angle[19]))) ) ) );


--min_angle[28] is min_angle[28]
--register power-up is low

min_angle[28] = DFFEAS(write_data[28], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[31] is min_angle[31]
--register power-up is low

min_angle[31] = DFFEAS(write_data[31], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[30] is min_angle[30]
--register power-up is low

min_angle[30] = DFFEAS(write_data[30], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--min_angle[29] is min_angle[29]
--register power-up is low

min_angle[29] = DFFEAS(write_data[29], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L373 is LessThan2~24
A1L373 = ( min_angle[30] & ( min_angle[29] & ( (current_angle[30] & (current_angle[29] & (!current_angle[31] $ (min_angle[31])))) ) ) ) # ( !min_angle[30] & ( min_angle[29] & ( (!current_angle[30] & (current_angle[29] & (!current_angle[31] $ (min_angle[31])))) ) ) ) # ( min_angle[30] & ( !min_angle[29] & ( (current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (min_angle[31])))) ) ) ) # ( !min_angle[30] & ( !min_angle[29] & ( (!current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (min_angle[31])))) ) ) );


--min_angle[27] is min_angle[27]
--register power-up is low

min_angle[27] = DFFEAS(write_data[27], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L374 is LessThan2~25
A1L374 = !current_angle[27] $ (!min_angle[27]);


--min_angle[26] is min_angle[26]
--register power-up is low

min_angle[26] = DFFEAS(write_data[26], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L375 is LessThan2~26
A1L375 = !current_angle[26] $ (!min_angle[26]);


--min_angle[25] is min_angle[25]
--register power-up is low

min_angle[25] = DFFEAS(write_data[25], CLOCK_50, reset,  , A1L461,  ,  ,  ,  );


--A1L376 is LessThan2~27
A1L376 = !current_angle[25] $ (!min_angle[25]);


--A1L377 is LessThan2~28
A1L377 = ( !A1L375 & ( !A1L376 & ( (A1L373 & (!A1L374 & (!current_angle[28] $ (min_angle[28])))) ) ) );


--A1L378 is LessThan2~29
A1L378 = (A1L373 & (!A1L374 & (!current_angle[28] $ (min_angle[28]))));


--A1L379 is LessThan2~30
A1L379 = ( min_angle[30] & ( min_angle[29] & ( (current_angle[31] & !min_angle[31]) ) ) ) # ( !min_angle[30] & ( min_angle[29] & ( (!current_angle[31] & (current_angle[30] & !min_angle[31])) # (current_angle[31] & ((!min_angle[31]) # (current_angle[30]))) ) ) ) # ( min_angle[30] & ( !min_angle[29] & ( (!current_angle[31] & (current_angle[30] & (current_angle[29] & !min_angle[31]))) # (current_angle[31] & ((!min_angle[31]) # ((current_angle[30] & current_angle[29])))) ) ) ) # ( !min_angle[30] & ( !min_angle[29] & ( (!current_angle[31] & (!min_angle[31] & ((current_angle[29]) # (current_angle[30])))) # (current_angle[31] & (((!min_angle[31]) # (current_angle[29])) # (current_angle[30]))) ) ) );


--A1L380 is LessThan2~31
A1L380 = ( min_angle[27] & ( !A1L379 & ( (!current_angle[28]) # ((!A1L373) # (min_angle[28])) ) ) ) # ( !min_angle[27] & ( !A1L379 & ( (!A1L373) # ((!current_angle[28] & ((!current_angle[27]) # (min_angle[28]))) # (current_angle[28] & (!current_angle[27] & min_angle[28]))) ) ) );


--A1L381 is LessThan2~32
A1L381 = ( min_angle[25] & ( A1L380 & ( (!current_angle[26]) # ((!A1L378) # (min_angle[26])) ) ) ) # ( !min_angle[25] & ( A1L380 & ( (!A1L378) # ((!current_angle[26] & ((!current_angle[25]) # (min_angle[26]))) # (current_angle[26] & (!current_angle[25] & min_angle[26]))) ) ) );


--A1L497 is Selector3~0
A1L497 = ( A1L377 & ( A1L381 & ( (current_state.SWEEP_LEFT & (A1L372 & ((!A1L368) # (A1L363)))) ) ) ) # ( !A1L377 & ( A1L381 & ( current_state.SWEEP_LEFT ) ) );


--A1L279 is irq_process~0
A1L279 = ( current_state.INT_LEFT & ( A1L497 ) ) # ( !current_state.INT_LEFT & ( A1L497 ) ) # ( current_state.INT_LEFT & ( !A1L497 & ( (!write_enable) # ((!current_state.SWEEP_RIGHT & A1L338)) ) ) ) # ( !current_state.INT_LEFT & ( !A1L497 & ( (!write_enable & (((!current_state.SWEEP_RIGHT & A1L338)) # (current_state.INT_RIGHT))) # (write_enable & (((!current_state.SWEEP_RIGHT & A1L338)))) ) ) );


--CLOCK_50 is CLOCK_50
CLOCK_50 = INPUT();


--reset is reset
reset = INPUT();


--A1L281 is LessThan0~0
A1L281 = ( periodCount[16] & ( periodCount[15] & ( (current_angle[16] & (!current_angle[15] & (!current_angle[17] $ (periodCount[17])))) ) ) ) # ( !periodCount[16] & ( periodCount[15] & ( (!current_angle[16] & (!current_angle[15] & (!current_angle[17] $ (periodCount[17])))) ) ) ) # ( periodCount[16] & ( !periodCount[15] & ( (current_angle[16] & (current_angle[15] & (!current_angle[17] $ (periodCount[17])))) ) ) ) # ( !periodCount[16] & ( !periodCount[15] & ( (!current_angle[16] & (current_angle[15] & (!current_angle[17] $ (periodCount[17])))) ) ) );


--A1L282 is LessThan0~1
A1L282 = ( periodCount[13] & ( (current_angle[13] & (A1L281 & (!current_angle[14] $ (!periodCount[14])))) ) ) # ( !periodCount[13] & ( (!current_angle[13] & (A1L281 & (!current_angle[14] $ (!periodCount[14])))) ) );


--A1L283 is LessThan0~2
A1L283 = !current_angle[12] $ (!periodCount[12]);


--A1L284 is LessThan0~3
A1L284 = !current_angle[11] $ (!periodCount[11]);


--A1L285 is LessThan0~4
A1L285 = (!current_angle[4] & ((!periodCount[4]) # (current_angle[3]))) # (current_angle[4] & (current_angle[3] & !periodCount[4]));


--A1L286 is LessThan0~5
A1L286 = ( A1L285 & ( (!current_angle[6] & (((!periodCount[6]) # (!periodCount[5])) # (current_angle[5]))) # (current_angle[6] & (!periodCount[6] & ((!periodCount[5]) # (current_angle[5])))) ) ) # ( !A1L285 & ( (!current_angle[6] & ((!periodCount[6]) # ((current_angle[5] & !periodCount[5])))) # (current_angle[6] & (current_angle[5] & (!periodCount[6] & !periodCount[5]))) ) );


--A1L287 is LessThan0~6
A1L287 = (!current_angle[10] & (!periodCount[10] & (!current_angle[9] $ (!periodCount[9])))) # (current_angle[10] & (periodCount[10] & (!current_angle[9] $ (!periodCount[9]))));


--A1L288 is LessThan0~7
A1L288 = ( periodCount[7] & ( (current_angle[7] & (A1L287 & (!current_angle[8] $ (!periodCount[8])))) ) ) # ( !periodCount[7] & ( (!current_angle[7] & (A1L287 & (!current_angle[8] $ (!periodCount[8])))) ) );


--A1L289 is LessThan0~8
A1L289 = (!current_angle[10] & (!current_angle[9] & (!periodCount[10] & !periodCount[9]))) # (current_angle[10] & ((!periodCount[10]) # ((!current_angle[9] & !periodCount[9]))));


--A1L290 is LessThan0~9
A1L290 = ( periodCount[7] & ( !A1L289 & ( ((!A1L287) # (periodCount[8])) # (current_angle[8]) ) ) ) # ( !periodCount[7] & ( !A1L289 & ( (!A1L287) # ((!current_angle[8] & (!current_angle[7] & periodCount[8])) # (current_angle[8] & ((!current_angle[7]) # (periodCount[8])))) ) ) );


--A1L291 is LessThan0~10
A1L291 = ( A1L288 & ( A1L290 & ( (A1L282 & (!A1L283 & (!A1L284 & A1L286))) ) ) ) # ( A1L288 & ( !A1L290 & ( (A1L282 & (!A1L283 & !A1L284)) ) ) ) # ( !A1L288 & ( !A1L290 & ( (A1L282 & (!A1L283 & !A1L284)) ) ) );


--A1L292 is LessThan0~11
A1L292 = ( periodCount[16] & ( periodCount[15] & ( (current_angle[17] & !periodCount[17]) ) ) ) # ( !periodCount[16] & ( periodCount[15] & ( (!current_angle[17] & (current_angle[16] & !periodCount[17])) # (current_angle[17] & ((!periodCount[17]) # (current_angle[16]))) ) ) ) # ( periodCount[16] & ( !periodCount[15] & ( (!current_angle[17] & (current_angle[16] & (!current_angle[15] & !periodCount[17]))) # (current_angle[17] & ((!periodCount[17]) # ((current_angle[16] & !current_angle[15])))) ) ) ) # ( !periodCount[16] & ( !periodCount[15] & ( (!current_angle[17] & (!periodCount[17] & ((!current_angle[15]) # (current_angle[16])))) # (current_angle[17] & (((!current_angle[15]) # (!periodCount[17])) # (current_angle[16]))) ) ) );


--A1L293 is LessThan0~12
A1L293 = ( periodCount[13] & ( !A1L292 & ( ((!A1L281) # (periodCount[14])) # (current_angle[14]) ) ) ) # ( !periodCount[13] & ( !A1L292 & ( (!A1L281) # ((!current_angle[14] & (!current_angle[13] & periodCount[14])) # (current_angle[14] & ((!current_angle[13]) # (periodCount[14])))) ) ) );


--A1L294 is LessThan0~13
A1L294 = ( periodCount[11] & ( A1L293 & ( (!current_angle[12]) # ((!A1L282) # (periodCount[12])) ) ) ) # ( !periodCount[11] & ( A1L293 & ( (!A1L282) # ((!current_angle[12] & ((!current_angle[11]) # (periodCount[12]))) # (current_angle[12] & (!current_angle[11] & periodCount[12]))) ) ) );


--A1L295 is LessThan0~14
A1L295 = ( periodCount[23] & ( periodCount[22] & ( (current_angle[23] & (current_angle[22] & (!current_angle[24] $ (periodCount[24])))) ) ) ) # ( !periodCount[23] & ( periodCount[22] & ( (!current_angle[23] & (current_angle[22] & (!current_angle[24] $ (periodCount[24])))) ) ) ) # ( periodCount[23] & ( !periodCount[22] & ( (current_angle[23] & (!current_angle[22] & (!current_angle[24] $ (periodCount[24])))) ) ) ) # ( !periodCount[23] & ( !periodCount[22] & ( (!current_angle[23] & (!current_angle[22] & (!current_angle[24] $ (periodCount[24])))) ) ) );


--A1L296 is LessThan0~15
A1L296 = !current_angle[20] $ (!periodCount[20]);


--A1L297 is LessThan0~16
A1L297 = !current_angle[19] $ (!periodCount[19]);


--A1L298 is LessThan0~17
A1L298 = !current_angle[18] $ (!periodCount[18]);


--A1L299 is LessThan0~18
A1L299 = ( !A1L297 & ( !A1L298 & ( (A1L295 & (!A1L296 & (!current_angle[21] $ (periodCount[21])))) ) ) );


--A1L300 is LessThan0~19
A1L300 = (A1L295 & (!A1L296 & (!current_angle[21] $ (periodCount[21]))));


--A1L301 is LessThan0~20
A1L301 = ( periodCount[23] & ( periodCount[22] & ( (current_angle[24] & !periodCount[24]) ) ) ) # ( !periodCount[23] & ( periodCount[22] & ( (!current_angle[24] & (current_angle[23] & !periodCount[24])) # (current_angle[24] & ((!periodCount[24]) # (current_angle[23]))) ) ) ) # ( periodCount[23] & ( !periodCount[22] & ( (!current_angle[24] & (current_angle[23] & (current_angle[22] & !periodCount[24]))) # (current_angle[24] & ((!periodCount[24]) # ((current_angle[23] & current_angle[22])))) ) ) ) # ( !periodCount[23] & ( !periodCount[22] & ( (!current_angle[24] & (!periodCount[24] & ((current_angle[22]) # (current_angle[23])))) # (current_angle[24] & (((!periodCount[24]) # (current_angle[22])) # (current_angle[23]))) ) ) );


--A1L302 is LessThan0~21
A1L302 = ( periodCount[20] & ( !A1L301 & ( (!current_angle[21]) # ((!A1L295) # (periodCount[21])) ) ) ) # ( !periodCount[20] & ( !A1L301 & ( (!A1L295) # ((!current_angle[21] & ((!current_angle[20]) # (periodCount[21]))) # (current_angle[21] & (!current_angle[20] & periodCount[21]))) ) ) );


--A1L303 is LessThan0~22
A1L303 = ( periodCount[18] & ( A1L302 & ( (!current_angle[19]) # ((!A1L300) # (periodCount[19])) ) ) ) # ( !periodCount[18] & ( A1L302 & ( (!A1L300) # ((!current_angle[19] & ((!current_angle[18]) # (periodCount[19]))) # (current_angle[19] & (!current_angle[18] & periodCount[19]))) ) ) );


--A1L304 is LessThan0~23
A1L304 = ( periodCount[30] & ( periodCount[29] & ( (current_angle[30] & (current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( !periodCount[30] & ( periodCount[29] & ( (!current_angle[30] & (current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( periodCount[30] & ( !periodCount[29] & ( (current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( !periodCount[30] & ( !periodCount[29] & ( (!current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) );


--A1L305 is LessThan0~24
A1L305 = !current_angle[27] $ (!periodCount[27]);


--A1L306 is LessThan0~25
A1L306 = !current_angle[26] $ (!periodCount[26]);


--A1L307 is LessThan0~26
A1L307 = !current_angle[25] $ (!periodCount[25]);


--A1L308 is LessThan0~27
A1L308 = ( !A1L306 & ( !A1L307 & ( (A1L304 & (!A1L305 & (!current_angle[28] $ (periodCount[28])))) ) ) );


--A1L309 is LessThan0~28
A1L309 = (A1L304 & (!A1L305 & (!current_angle[28] $ (periodCount[28]))));


--A1L310 is LessThan0~29
A1L310 = ( periodCount[30] & ( periodCount[29] & ( (current_angle[31] & !periodCount[31]) ) ) ) # ( !periodCount[30] & ( periodCount[29] & ( (!current_angle[31] & (current_angle[30] & !periodCount[31])) # (current_angle[31] & ((!periodCount[31]) # (current_angle[30]))) ) ) ) # ( periodCount[30] & ( !periodCount[29] & ( (!current_angle[31] & (current_angle[30] & (current_angle[29] & !periodCount[31]))) # (current_angle[31] & ((!periodCount[31]) # ((current_angle[30] & current_angle[29])))) ) ) ) # ( !periodCount[30] & ( !periodCount[29] & ( (!current_angle[31] & (!periodCount[31] & ((current_angle[29]) # (current_angle[30])))) # (current_angle[31] & (((!periodCount[31]) # (current_angle[29])) # (current_angle[30]))) ) ) );


--A1L311 is LessThan0~30
A1L311 = ( periodCount[27] & ( !A1L310 & ( (!current_angle[28]) # ((!A1L304) # (periodCount[28])) ) ) ) # ( !periodCount[27] & ( !A1L310 & ( (!A1L304) # ((!current_angle[28] & ((!current_angle[27]) # (periodCount[28]))) # (current_angle[28] & (!current_angle[27] & periodCount[28]))) ) ) );


--A1L312 is LessThan0~31
A1L312 = ( periodCount[25] & ( A1L311 & ( (!current_angle[26]) # ((!A1L309) # (periodCount[26])) ) ) ) # ( !periodCount[25] & ( A1L311 & ( (!A1L309) # ((!current_angle[26] & ((!current_angle[25]) # (periodCount[26]))) # (current_angle[26] & (!current_angle[25] & periodCount[26]))) ) ) );


--A1L313 is LessThan0~32
A1L313 = ( A1L308 & ( A1L312 & ( (!A1L303) # ((A1L299 & ((!A1L294) # (A1L291)))) ) ) ) # ( A1L308 & ( !A1L312 ) ) # ( !A1L308 & ( !A1L312 ) );


--A1L496 is Selector2~0
A1L496 = (!write_enable & (((!current_state.SWEEP_RIGHT & A1L338)) # (current_state.INT_RIGHT))) # (write_enable & (((!current_state.SWEEP_RIGHT & A1L338))));


--A1L494 is Selector0~0
A1L494 = (!write_enable & (((A1L338)) # (current_state.SWEEP_RIGHT))) # (write_enable & (!current_state.INT_LEFT & ((A1L338) # (current_state.SWEEP_RIGHT))));


--A1L272 is Equal0~0
A1L272 = (!periodCount[25] & (!periodCount[24] & (!periodCount[23] & !periodCount[22])));


--A1L273 is Equal0~1
A1L273 = ( periodCount[17] & ( periodCount[16] & ( (!periodCount[21] & (!periodCount[20] & (periodCount[19] & periodCount[18]))) ) ) );


--A1L274 is Equal0~2
A1L274 = ( !periodCount[11] & ( !periodCount[10] & ( (!periodCount[31] & (periodCount[14] & (!periodCount[13] & !periodCount[12]))) ) ) );


--A1L275 is Equal0~3
A1L275 = ( !periodCount[26] & ( !periodCount[15] & ( (!periodCount[30] & (!periodCount[29] & (!periodCount[28] & !periodCount[27]))) ) ) );


--A1L276 is Equal0~4
A1L276 = ( !periodCount[4] & ( (!periodCount[8] & (!periodCount[7] & (periodCount[6] & !periodCount[5]))) ) );


--A1L277 is Equal0~5
A1L277 = ( A1L275 & ( A1L276 & ( (periodCount[9] & (A1L272 & (A1L273 & A1L274))) ) ) );


--A1L233 is current_angle[3]~2
A1L233 = (A1L277 & ((!current_state.SWEEP_RIGHT) # (current_state.SWEEP_LEFT)));


--write_data[18] is write_data[18]
write_data[18] = INPUT();


--address is address
address = INPUT();


--A1L424 is max_angle[31]~0
A1L424 = (write_enable & !address);


--write_data[21] is write_data[21]
write_data[21] = INPUT();


--write_data[20] is write_data[20]
write_data[20] = INPUT();


--write_data[19] is write_data[19]
write_data[19] = INPUT();


--write_data[17] is write_data[17]
write_data[17] = INPUT();


--write_data[16] is write_data[16]
write_data[16] = INPUT();


--write_data[15] is write_data[15]
write_data[15] = INPUT();


--write_data[4] is write_data[4]
write_data[4] = INPUT();


--write_data[7] is write_data[7]
write_data[7] = INPUT();


--write_data[6] is write_data[6]
write_data[6] = INPUT();


--write_data[5] is write_data[5]
write_data[5] = INPUT();


--write_data[3] is write_data[3]
write_data[3] = INPUT();


--write_data[2] is write_data[2]
write_data[2] = INPUT();


--write_data[1] is write_data[1]
write_data[1] = INPUT();


--write_data[0] is write_data[0]
write_data[0] = INPUT();


--write_data[14] is write_data[14]
write_data[14] = INPUT();


--write_data[13] is write_data[13]
write_data[13] = INPUT();


--write_data[12] is write_data[12]
write_data[12] = INPUT();


--write_data[11] is write_data[11]
write_data[11] = INPUT();


--write_data[9] is write_data[9]
write_data[9] = INPUT();


--write_data[10] is write_data[10]
write_data[10] = INPUT();


--write_data[8] is write_data[8]
write_data[8] = INPUT();


--write_data[25] is write_data[25]
write_data[25] = INPUT();


--write_data[28] is write_data[28]
write_data[28] = INPUT();


--write_data[27] is write_data[27]
write_data[27] = INPUT();


--write_data[26] is write_data[26]
write_data[26] = INPUT();


--write_data[24] is write_data[24]
write_data[24] = INPUT();


--write_data[23] is write_data[23]
write_data[23] = INPUT();


--write_data[22] is write_data[22]
write_data[22] = INPUT();


--write_data[31] is write_data[31]
write_data[31] = INPUT();


--write_data[30] is write_data[30]
write_data[30] = INPUT();


--write_data[29] is write_data[29]
write_data[29] = INPUT();


--A1L498 is Selector3~1
A1L498 = ((!write_enable & current_state.INT_LEFT)) # (A1L497);


--A1L382 is LessThan2~33
A1L382 = ( A1L381 & ( (!A1L377) # ((A1L372 & ((!A1L368) # (A1L363)))) ) );


--A1L495 is Selector1~0
A1L495 = (!write_enable & (((current_state.SWEEP_LEFT & !A1L382)))) # (write_enable & (((current_state.SWEEP_LEFT & !A1L382)) # (current_state.INT_RIGHT)));


--A1L461 is min_angle[31]~0
A1L461 = (write_enable & address);


--A1L339 is LessThan1~25
A1L339 = ( current_angle[25] & ( max_angle[25] & ( (!current_angle[23] & (((!current_angle[22] & max_angle[22])) # (max_angle[23]))) # (current_angle[23] & (max_angle[23] & (!current_angle[22] & max_angle[22]))) ) ) ) # ( !current_angle[25] & ( max_angle[25] ) ) # ( !current_angle[25] & ( !max_angle[25] & ( (!current_angle[23] & (((!current_angle[22] & max_angle[22])) # (max_angle[23]))) # (current_angle[23] & (max_angle[23] & (!current_angle[22] & max_angle[22]))) ) ) );


--A1L340 is LessThan1~26
A1L340 = (!current_angle[25] & (((!current_angle[24] & max_angle[24])) # (max_angle[25]))) # (current_angle[25] & (max_angle[25] & (!current_angle[24] & max_angle[24])));


--A1L341 is LessThan1~27
A1L341 = ( !current_angle[8] & ( max_angle[8] & ( (!current_angle[11] & (!max_angle[11] & (!current_angle[10] $ (!max_angle[10])))) # (current_angle[11] & (max_angle[11] & (!current_angle[10] $ (!max_angle[10])))) ) ) ) # ( current_angle[8] & ( !max_angle[8] & ( (!current_angle[11] & (!max_angle[11] & (!current_angle[10] $ (!max_angle[10])))) # (current_angle[11] & (max_angle[11] & (!current_angle[10] $ (!max_angle[10])))) ) ) );


--A1L342 is LessThan1~28
A1L342 = (!current_angle[13] & (!max_angle[13] & (!current_angle[12] $ (max_angle[12])))) # (current_angle[13] & (max_angle[13] & (!current_angle[12] $ (max_angle[12]))));


--A1L343 is LessThan1~29
A1L343 = ( !current_angle[10] & ( max_angle[10] & ( (!current_angle[12] & (!max_angle[12] & (!current_angle[11] $ (max_angle[11])))) # (current_angle[12] & (max_angle[12] & (!current_angle[11] $ (max_angle[11])))) ) ) ) # ( current_angle[10] & ( !max_angle[10] & ( (!current_angle[12] & (!max_angle[12] & (!current_angle[11] $ (max_angle[11])))) # (current_angle[12] & (max_angle[12] & (!current_angle[11] $ (max_angle[11])))) ) ) );


--A1L344 is LessThan1~30
A1L344 = (!current_angle[14] & (max_angle[14] & (!current_angle[13] $ (max_angle[13])))) # (current_angle[14] & (!max_angle[14] & (!current_angle[13] $ (max_angle[13]))));


--A1L345 is LessThan1~31
A1L345 = ( current_angle[17] & ( max_angle[17] & ( (!current_angle[18] & (((current_angle[15] & !max_angle[15])) # (max_angle[18]))) # (current_angle[18] & (current_angle[15] & (!max_angle[15] & max_angle[18]))) ) ) ) # ( !current_angle[17] & ( max_angle[17] & ( (!current_angle[18]) # (max_angle[18]) ) ) ) # ( current_angle[17] & ( !max_angle[17] & ( (!current_angle[18] & max_angle[18]) ) ) ) # ( !current_angle[17] & ( !max_angle[17] & ( (!current_angle[18] & (((current_angle[15] & !max_angle[15])) # (max_angle[18]))) # (current_angle[18] & (current_angle[15] & (!max_angle[15] & max_angle[18]))) ) ) );


--A1L346 is LessThan1~32
A1L346 = ( current_angle[19] & ( max_angle[19] & ( (!current_angle[21] & (((!current_angle[20] & max_angle[20])) # (max_angle[21]))) # (current_angle[21] & (max_angle[21] & (!current_angle[20] & max_angle[20]))) ) ) ) # ( !current_angle[19] & ( max_angle[19] & ( (!current_angle[21] & (((!current_angle[20]) # (max_angle[20])) # (max_angle[21]))) # (current_angle[21] & (max_angle[21] & ((!current_angle[20]) # (max_angle[20])))) ) ) ) # ( current_angle[19] & ( !max_angle[19] & ( (!current_angle[21] & (((!current_angle[20] & max_angle[20])) # (max_angle[21]))) # (current_angle[21] & (max_angle[21] & (!current_angle[20] & max_angle[20]))) ) ) ) # ( !current_angle[19] & ( !max_angle[19] & ( (!current_angle[21] & (((!current_angle[20] & max_angle[20])) # (max_angle[21]))) # (current_angle[21] & (max_angle[21] & (!current_angle[20] & max_angle[20]))) ) ) );


--A1L347 is LessThan1~33
A1L347 = ( current_angle[17] & ( max_angle[17] & ( (!current_angle[16] & (!max_angle[16] & ((!current_angle[18]) # (max_angle[18])))) # (current_angle[16] & (max_angle[16] & (!current_angle[18] & max_angle[18]))) ) ) ) # ( !current_angle[17] & ( max_angle[17] & ( (!current_angle[16] & (!max_angle[16] & ((!current_angle[18]) # (max_angle[18])))) # (current_angle[16] & (max_angle[16] & (!current_angle[18]))) ) ) ) # ( current_angle[17] & ( !max_angle[17] & ( (current_angle[16] & (max_angle[16] & (!current_angle[18] & max_angle[18]))) ) ) ) # ( !current_angle[17] & ( !max_angle[17] & ( (!current_angle[16] & (!max_angle[16] & ((!current_angle[18]) # (max_angle[18])))) # (current_angle[16] & (max_angle[16] & (!current_angle[18] & max_angle[18]))) ) ) );


--A1L348 is LessThan1~34
A1L348 = (max_angle[16] & ((!max_angle[17]) # (current_angle[17])));


--A1L383 is LessThan2~34
A1L383 = ( current_angle[11] & ( min_angle[11] & ( (!current_angle[14] & (!min_angle[14] & (!current_angle[13] $ (min_angle[13])))) # (current_angle[14] & (min_angle[14] & (!current_angle[13] $ (min_angle[13])))) ) ) ) # ( !current_angle[11] & ( !min_angle[11] & ( (!current_angle[14] & (!min_angle[14] & (!current_angle[13] $ (min_angle[13])))) # (current_angle[14] & (min_angle[14] & (!current_angle[13] $ (min_angle[13])))) ) ) );


--A1L384 is LessThan2~35
A1L384 = (!current_angle[16] & (!min_angle[16] & (!current_angle[15] $ (min_angle[15])))) # (current_angle[16] & (min_angle[16] & (!current_angle[15] $ (min_angle[15]))));


--A1L408 is max_angle[16]~1
A1L408 = !write_data[16];


--A1L251 is current_angle[15]~3
A1L251 = !A1L138;


--A1L406 is max_angle[15]~2
A1L406 = !write_data[15];


--A1L235 is current_angle[4]~4
A1L235 = !A1L142;


--A1L395 is max_angle[7]~3
A1L395 = !write_data[7];


--A1L238 is current_angle[6]~5
A1L238 = !A1L150;


--A1L392 is max_angle[5]~4
A1L392 = !write_data[5];


--A1L249 is current_angle[14]~6
A1L249 = !A1L162;


--A1L243 is current_angle[9]~7
A1L243 = !A1L178;


--A1L398 is max_angle[9]~5
A1L398 = !write_data[9];


--A1L400 is max_angle[10]~6
A1L400 = !write_data[10];


--A1L241 is current_angle[8]~8
A1L241 = !A1L186;


--A1L431 is min_angle[6]~1
A1L431 = !write_data[6];


--A1L428 is min_angle[4]~2
A1L428 = !write_data[4];


--A1L434 is min_angle[8]~3
A1L434 = !write_data[8];


--A1L436 is min_angle[9]~4
A1L436 = !write_data[9];


--A1L444 is min_angle[15]~5
A1L444 = !write_data[15];


--A1L442 is min_angle[14]~6
A1L442 = !write_data[14];


